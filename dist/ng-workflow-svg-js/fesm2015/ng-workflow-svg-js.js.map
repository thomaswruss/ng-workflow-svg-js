{"version":3,"file":"ng-workflow-svg-js.js","sources":["ng://ng-workflow-svg-js/lib/ng-workflow-svg-js.component.ts","ng://ng-workflow-svg-js/lib/ng-workflow-svg-js.module.ts","ng://ng-workflow-svg-js/public-api.ts","ng://ng-workflow-svg-js/ng-workflow-svg-js.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as WorkflowSVG from 'workflow-svg.js/dist/workflow-svg.minified.js';\n\ndeclare var WorkflowSVG: any;\ndeclare const SVG: any;\n\nexport class NgWorkflowSvgJsEntity {\n  id: string;\n  text: string;\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  backgroundcolor: string;\n  color: string;\n  radius = 0;\n}\n\nexport enum NgWorkflowSvgJsArrowType{\n  default, none\n}\n\nexport enum NgWorkflowSvgJsGridType{\n  static, dynamic\n}\n\nexport class NgWorkflowSvgJsConfiguration {\n  // tslint:disable-next-line:variable-name\n  line_color: string;\n  // tslint:disable-next-line:variable-name\n  arrow_type: NgWorkflowSvgJsArrowType;\n  // tslint:disable-next-line:variable-name\n  grid_type: NgWorkflowSvgJsGridType;\n  readonly: boolean;\n  // tslint:disable-next-line:variable-name\n  grid_x: number;\n  // tslint:disable-next-line:variable-name\n  grid_y: number;\n}\n\nexport class NgWorkflowSvgJsPoint {\n  point: string;\n  element: string;\n}\n\nexport class NgWorkflowSvgJsLine {\n  id: string;\n  from: NgWorkflowSvgJsPoint;\n  to: NgWorkflowSvgJsPoint;\n}\n\n@Component({\n  selector: 'ng-workflow-svg-js',\n  template: `\n    <div [id]=\"id\"></div>\n  `,\n  styles: [\n  ]\n})\nexport class NgWorkflowSvgJsComponent implements OnInit {\n\n  @Input()\n  id: string;\n\n  @Input()\n  width: number;\n\n  @Input()\n  height: number;\n\n  private e = [];\n  private l = [];\n  private c = {};\n  private workflow: any;\n\n  @Input()\n  set entities(entities: NgWorkflowSvgJsEntity[]){\n    this.e = entities;\n    this.update();\n  }\n\n  @Input()\n  set configuration(configuration: NgWorkflowSvgJsConfiguration){\n    this.c = configuration;\n    this.update();\n  }\n\n  @Input()\n  set lines(lines: NgWorkflowSvgJsLine[]){\n    this.l = lines;\n    this.update();\n  }\n\n  @Output() entitiesChange: EventEmitter<NgWorkflowSvgJsEntity[]> = new EventEmitter<NgWorkflowSvgJsEntity[]>();\n  @Output() linesChange: EventEmitter<NgWorkflowSvgJsLine[]> = new EventEmitter<NgWorkflowSvgJsLine[]>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.workflow = new WorkflowSVG();\n    this.workflow.initalize('#' + this.id, this.width, this.height);\n\n    const callback = () => {\n      const data = this.workflow.get();\n      this.e = data.entities;\n      this.l = data.lines;\n      this.entitiesChange.emit(data.entities);\n      this.linesChange.emit(data.lines);\n    };\n\n    this.workflow.register('entity:moved', callback);\n    this.workflow.register('line:added', callback);\n    this.workflow.register('label:moved', callback);\n\n    this.update();\n  }\n\n  update(): void{\n    if (this.workflow) {\n        this.workflow.update({\n        entities: this.e,\n        lines: this.l,\n        configuration: this.c\n      });\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { NgWorkflowSvgJsComponent } from './ng-workflow-svg-js.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgWorkflowSvgJsComponent],\r\n  imports: [\r\n  ],\r\n  exports: [NgWorkflowSvgJsComponent]\r\n})\r\nexport class NgWorkflowSvgJsModule { }\r\n","/*\n * Public API Surface of ng-workflow-svg-js\n */\n\nexport * from './lib/ng-workflow-svg-js.component';\nexport * from './lib/ng-workflow-svg-js.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}